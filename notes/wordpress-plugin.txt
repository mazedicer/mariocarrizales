<?php
/*---------------------------------------------
ACTION function inside your plugin file 
----------------------------------------------*/
function email_friends($post_ID){
	//mail your friends 
	return $post_ID;
}
/*use classes
and outside the class add_action with an array('class','method')*/
class emailer{
	static function send($post_ID){
		//mail your friends 
		return $post_ID;
	}
}
add_action('publish_post',array('emailer','send'));
/*class without static function*/
class emailer{
	function send($post_ID){
		//mail your friends 
		return $post_ID;
	}
}
$myEmailClass = new emailer();
add_action('publish_post', array($myEmailClass, 'send'));
/*---------------------------------------------
SAVING Plugin data  
----------------------------------------------*/
/*
1. Option - for plugin related data
https://codex.wordpress.org/Creating_Options_Pages
mechanism for saving, updating, and retrieving individual, named pieces of data("options")
Option values can be strings,arrays,php objects(auto serialize/unserialized)
must be unique so that they do not conflict with other plugin options.*/
//will create a new option,nothing if already exists.
add_option($name,$value,$deprecated,$autoload);
//get an option value 
get_option($option_name);
//update option 
update_option($option_name,$newvalue);
/*Add administration menu for your custom options
https://codex.wordpress.org/Adding_Administration_Menus 
to match wordpress look*/
<div class="wrap">
//create form 
<form method="post" action="options.php">
//settings_field() know which settings your options page will handle.
//myoption-group = same name used in register_setting function 
settings_fields('myoption-group');
//replace form-field markup in the form 
do_settings_sections('myoption-group');
//close the form 
submit_button();
</form>
</div>
/*register_setting and unregister_setting add and remove options from a whitelist
register_setting() should be called in an admin_init action, runs before every admin page and options.php, which receives this form.*/
if(is_admin()){
	add_action('admin_menu','add_mymenu');
	add_action('admin_init','register_mysettings');
}else{
	//non admin stuff 
}
/*whitelist 
the name myoption-group has to match the name in settings_fields() function above.*/
function register_mysettings(){
	register_setting('myoption-group','new_option_name');
	register_setting('myoption-group','some_other_option');
	register_setting('myoption-group','option_etc');
}
/*2. Post Meta(aka custom fields) for data associated with individual posts, pages, or attachments. add_post_meta() and related functions.
https://codex.wordpress.org/Function_Reference/post_meta_Function_Examples
https://codex.wordpress.org/Function_Reference/add_post_meta
3. Taxonomy - for classifying posts or other objects. When you want to access all posts/objects associated with a given taxonomy term. See custom taxonomies.
https://codex.wordpress.org/Taxonomies#Custom_Taxonomies
4. New db table. for data not associated with individual posts, pages, attachments, or comments. See creating tables with plugins.
https://codex.wordpress.org/Creating_Tables_with_Plugins

/* widget plugin example start the php file with the following comment:
Plugin Name: NTT Social Networks
Plugin URI: http://www.newthinktank.com/wordpress-plugin-howto/
Description: Displays links to RSS, Facebook, and Twitter. Teaches you how to make plugins.
Version: 2.0
Author: Derek Bananas
Author URI: http://www.newthinktank.com 
*/
class ntt_link_to_social_networks extends WP_Widget {
	//initialize plugin 
	function ntt_link_to_social_networks(){
		$widget_options = array(
			'classname' => 'ntt_link_to_social_networks',
			'description' => __( 'Displays Links to Facebook, Twitter, and RSS' )
		);
		parent::WP_Widget( 'ntt_link_to_social_networks', 'NTT Social Network Links', $widget_options );
	}//ntt_link_to_social_networks
	/*displays on website
	$instance: widget itself
	*/
	function widget( $args, $instance ){
		extract( $args, EXTR_SKIP );//deprecated
		$title = ( $instance['title'] ) ? $instance['title'] : 'Follow Me';
		$facebook = ( $instance['facebook'] ) ? $instance['facebook'] : 'dbananas2';
		$twitter = ( $instance['twitter'] ) ? $instance['twitter'] : 'newthinktank';
		//plugins_url: kicks back the location of the images
		$ntt_feed_icon = plugins_url( 'images/rss_logo.php', __FILE__ );
		$ntt_facebook_icon = plugins_url( 'images/facebook_logo.php', __FILE__ );
		$ntt_twitter_icon = plugins_url( 'images/twitter_logo.php', __FILE__ );
		//bloginfo( 'rss2_url' ): location to rss url 
		bloginfo( 'rss2_url' );
		/*display the data inputed by the user complying with WP 
		$before_title, $before_widget, $after_title, $after_widget are all WP variables
		that contain html that complies with WP structure themes
		*/
		echo $before_widget;
		echo $before_title . $title . $after_title;
		echo $instance['twitter'];
		echo $instance['facebook'];
	}//widget 
	//save everything that's been entered
	function update( $new_instance, $old_instance ){
		$instance = $old_instance;
		$instance['title'] = strip_tags( $new_instance['title'] );
		$instance['facebook'] = strip_tags( $new_instance['facebook'] );
		$instance['twitter'] = strip_tags( $new_instance['twitter'] );
		return $instance;
	}//update 
	//admin section
	function form( $instance ){
		$default = array( 'title' => 'Follow Me',
							'facebook' => 'dbananas2',
							'twitter' => 'newthinktank' );
		/*
		wp_parse_args( string|array $args, array $defaults = '' )
		Merge user defined arguments into defaults array.
		This function is used throughout WordPress to allow for both string or array to be merged into another array.
		Return: (array) Merged user defined values with defaults.
		Source file: wp-includes/functions.php 
		*/
		$instance = wp_parse_args( ( array ) $instance, $defaults );
		$title = $instance['title'];
		$facebook = $instance['facebook'];
		$twitter = $instance['twitter'];
		//build your html form with the following
		//get_field_name( string ): 
		echo $this->get_field_name( 'title' );
		echo esc_attr( $title );
		echo $this->get_field_name( 'facebook' );
		echo esc_attr( $facebook );
		echo $this->get_field_name( 'twitter' );
		echo esc_attr( $twitter );
	}//form 
}

function ntt_link_to_social_networks_init(){
	register_widget( 'ntt_link_to_social_networks' );
}//ntt_link_to_social_networks_init
//action hook
add_action( 'widget_init', 'ntt_link_to_social_networks_init' );
/*
most common action hooks and when they occur:
admin_head: Occur in the head for the dashboard
admin_init: Occurs when the dashboard has loaded
comment_post: Occurs when a new comment is created
create_category: Occurs when a category is created
init: Occurs when WP has loaded the website
publish_post: Occurs when a new post is published
switch_theme: Occurs when the theme is changed
user_register: Occurs when a new user registers
wp_footer: Occurs in the footer
wp_head: Occurs in the header 
*/



