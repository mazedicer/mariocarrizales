<?php 
////////////////////////////////////////////////////////////////////
//persuader/functions.php
////////////////////////////////////////////////////////////////////
/*Enqueue styles and scripts*/
require get_template_directory() . '/inc/enqueue.php';
/*Theme Setup*/
require get_template_directory() . '/inc/setup.php';
/*Custom Post Types*/
require get_template_directory() . '/inc/register-custom-posts.php';
/*General Options custom content types*/
require get_template_directory() . '/inc/general-options.php';
/*General Blocks - main block*/
require get_template_directory() . '/inc/general-blocks.php';
/*WP SCSS*/
require get_template_directory() . '/inc/wp-scss.php';
/*Shortcodes*/
require get_template_directory() . '/inc/shortcodes.php';
/*Woocommerce*/
require get_template_directory() . '/inc/woocommerce.php';
/*Posts*/
require get_template_directory() . '/inc/posts.php';
/*Promotions*/
require get_template_directory() . '/inc/promotions.php';
/*Careers*/
require get_template_directory() . '/inc/careers.php';
////////////////////////////////////////////////////////////////////
// /inc/enqueue.php
////////////////////////////////////////////////////////////////////
/*Use latest jQuery release*/
function enqueue_scripts() {
	wp_deregister_script( 'jquery' );
	wp_register_script( 'jquery', ( "//cdnjs.cloudflare.com/ajax/libs/jquery/2.2.4/jquery.min.js" ), false, '2.2.4' );
	wp_enqueue_script( 'jquery' );
	wp_deregister_script( 'jquery-ui' );
	wp_register_script( 'jquery-ui', ( "//code.jquery.com/ui/1.11.4/jquery-ui.min.js" ), false, '1.11.4' );
	wp_enqueue_script( 'jquery-ui' );
}
add_action( 'wp_enqueue_scripts', 'enqueue_scripts' );
//Add CSS
function dsPrelude_enqueue_style() {
	wp_enqueue_style( 'style', get_template_directory_uri() . '/style.css', false );
	wp_enqueue_style( 'child-style', get_stylesheet_directory_uri() . '/style.css', false );
}
add_action( 'wp_enqueue_scripts', 'dsPrelude_enqueue_style' );
//Add Javascript
function dsPrelude_enqueue_script() {
	wp_enqueue_script( 'tether', 'https://npmcdn.com/tether@1.2.4/dist/js/tether.min.js', false );
	wp_enqueue_script( 'vendors', get_template_directory_uri() . '/assets/js/vendors.min.js', false );
	wp_enqueue_script( 'custom', get_template_directory_uri() . '/assets/js/custom.min.js', false );
	wp_enqueue_script( 'Ccustom', get_stylesheet_directory_uri() . '/assets/js/child.js', false );
	wp_enqueue_script( 'ajaxurl', admin_url( 'admin-ajax.php' ), false );
}
add_action( 'wp_enqueue_scripts', 'dsPrelude_enqueue_script' );
////////////////////////////////////////////////////////////////////
// /inc/setup.php
////////////////////////////////////////////////////////////////////
/*SVG Support*/
add_filter( 'upload_mimes', 'custom_upload_mimes' );
function custom_upload_mimes( $existing_mimes = array() ) {
	// add the file extension to the array
	$existing_mimes['svg'] = 'mime/type';

	// call the modified list of extensions
	return $existing_mimes;
}
////////////////////////////////////////////////////////////////////
// /inc/register-custom-posts.php
////////////////////////////////////////////////////////////////////
function generalContentBlocks() {
	$labels = array(
		'name'                  => _x( 'Content Blocks', 'Post Type General Blocks', 'gcb' ),
		'singular_name'         => _x( 'Content Block', 'Post Type Singular Name', 'gcb' ),
		'menu_name'             => __( 'Content Blocks', 'gcb' ),
		'name_admin_bar'        => __( 'Content Blocks', 'gcb' ),
		'archives'              => __( 'GCB Archives', 'gcb' ),
		'parent_item_colon'     => __( 'Parent GCB', 'gcb' ),
		'all_items'             => __( 'All Content Blocks', 'gcb' ),
		'add_new_item'          => __( 'Add New Content Block', 'gcb' ),
		'add_new'               => __( 'Add Content Block', 'gcb' ),
		'new_item'              => __( 'New Content Block', 'gcb' ),
		'edit_item'             => __( 'Edit Content Block', 'gcb' ),
		'update_item'           => __( 'Update Content Block', 'gcb' ),
		'view_item'             => __( 'View Content Block', 'gcb' ),
		'search_items'          => __( 'Search Content Block', 'gcb' ),
		'not_found'             => __( 'Not found', 'gcb' ),
		'not_found_in_trash'    => __( 'Not found in Trash', 'gcb' ),
		'featured_image'        => __( 'Featured Image', 'gcb' ),
		'set_featured_image'    => __( 'Set featured image', 'gcb' ),
		'remove_featured_image' => __( 'Remove featured image', 'gcb' ),
		'use_featured_image'    => __( 'Use as featured image', 'gcb' ),
		'insert_into_item'      => __( 'Insert into Content Block', 'gcb' ),
		'uploaded_to_this_item' => __( 'Uploaded to this Content Block', 'gcb' ),
		'items_list'            => __( 'Content Blocks list', 'gcb' ),
		'items_list_navigation' => __( 'Content Blocks list navigation', 'gcb' ),
		'filter_items_list'     => __( 'Filter Content Blocks list', 'gcb' ),
	);
	$args   = array(
		'label'               => __( 'Content Block', 'gcb' ),
		'description'         => __( 'Content Blocks for page building', 'gcb' ),
		'labels'              => $labels,
		'supports'            => array(),
		'taxonomies'          => array( 'category', 'gcbs-tag' ),
		'hierarchical'        => false,
		'public'              => true,
		'show_ui'             => true,
		'show_in_menu'        => true,
		'menu_icon'           => 'dashicons-welcome-widgets-menus',
		'menu_position'       => 5,
		'show_in_admin_bar'   => true,
		'show_in_nav_menus'   => true,
		'can_export'          => true,
		'has_archive'         => true,
		'exclude_from_search' => true,
		'publicly_queryable'  => true,
		'capability_type'     => 'page',
	);
	register_post_type( 'gcbs', $args );
}
add_action( 'init', 'generalContentBlocks', 0 );
//Promotions Content Block
function PromotionsContentBlock() {

	$labels = array(
		'name'              => _x( 'Promotions', 'Post Type Promotions', 'promotions' ),
		'singular_name'     => _x( 'Promotion', 'Post Type Singular Name', 'promotion' ),
		'menu_name'         => __( 'Promotions', 'promotions' ),
		'name_admin_bar'    => __( 'Promotions', 'promotions' ),
		'archives'          => __( 'Promotion Archives', 'promotions' ),
		'parent_item_colon' => __( 'Parent Promotion', 'promotions' ),
		'all_items'         => __( 'All Promotions', 'promotions' ),
		'add_new_item'      => __( 'Add New Promotion', 'promotions' ),
		'add_new'           => __( 'Add Promotion', 'promotions' ),
		'new_item'          => __( 'New Promotion', 'promotions' ),
		'edit_item'         => __( 'Edit Promotion', 'promotions' ),
		'update_item'       => __( 'Update Promotion', 'promotions' ),
		'view_item'         => __( 'View Promotion', 'promotions' ),
		'search_items'      => __( 'Search Promotion', 'promotions' ),
	);
	$args   = array(
		'label'               => __( 'Promotion', 'promotions' ),
		'description'         => __( 'Promotions for products', 'promotions' ),
		'labels'              => $labels,
		'supports'            => array(),
		'taxonomies'          => array( 'category', 'promotions-tag' ),
		'hierarchical'        => false,
		'public'              => true,
		'show_ui'             => true,
		'show_in_menu'        => true,
		'menu_position'       => 5,
		'menu_icon'           => 'dashicons-megaphone',
		'show_in_admin_bar'   => true,
		'show_in_nav_menus'   => true,
		'can_export'          => true,
		'has_archive'         => false,
		'exclude_from_search' => true,
		'publicly_queryable'  => true,
		'capability_type'     => 'page',
	);
	register_post_type( 'promotions', $args );
}
add_action( 'init', 'PromotionsContentBlock', 0 );
////////////////////////////////////////////////////////////////////
// /inc/wp-scss.php
////////////////////////////////////////////////////////////////////
//On Options Page Save compile SASS!
function optionsPageSaved() {
	$screen = get_current_screen();
	if ( strpos( $screen->id, "options" ) == true ) {
		//Activate Sass compiler plugin
		require_once( ABSPATH . 'wp-admin/includes/plugin.php' );
		$sassPlugin = 'wp-scss/wp-scss.php';
		activate_plugins( $sassPlugin );
		//set SASS persuader/variables
		$sass = "";
		//Link Color
		$linksColor      = get_field( 'linksColor', 'option' );
		$hoverLinksColor = get_field( 'hoverLinksColor', 'option' );
		$sass .= ".bodyContent a {color: " . $linksColor . ";}" . PHP_EOL;
		$sass .= ".bodyContent a:hover {color: " . $hoverLinksColor . ";}" . PHP_EOL;
		//Check what header
		$headerFixed = get_field( 'headerFixed', 'option' );
		if ( $headerFixed == 1 ) {
			$sass .= ".mainHeader{position:absolute;}";
		} else {
			$sass .= ".mainHeader{position:relative;}";
		}
		$headerType = get_field( 'headerLayout', 'option' );
		$headerFile =  get_template_directory() . '/variables/header/header' . $headerType . '.php';
		include( $headerFile );
		$footerType = get_field( 'footerLayout', 'option' );
		$footerFile =  get_template_directory() . '/variables/footer/footer' . $footerType . '.php';
		include( $footerFile );
		//Other Colors
		//Buttons
		$buttonCustom = get_field( 'buttonCustom', 'option' );
		if ( $buttonCustom == 0 ) {
			$buttonColor     = get_field( 'buttonColor', 'option' );
			$buttonTextColor = get_field( 'buttonTextColor', 'option' );
			$sass .= "$" . "buttonColor:" . $buttonColor . ";" . PHP_EOL;
			$sass .= "$" . "buttonTextColor:" . $buttonTextColor . ";" . PHP_EOL;
			$sass .= " .btn, .button, .submit {
       background-attachment: scroll;
       background-clip: border-box;
       background-color: $buttonColor !important;
       background-image: none;
       background-origin: padding-box;
       background-position-x: 0;
       background-position-y: 0;
       background-repeat: repeat;
       background-size: auto auto;
       color: $buttonTextColor !important;
       cursor: pointer !important;
       margin-bottom: 0.4em !important;
       margin-left: 0.4em !important;
       margin-right: 0.4em !important;
       margin-top: 0.4em !important;
       padding-bottom: .5em !important;
       padding-left: 1.3em !important;
       padding-right: 1.3em !important;
       padding-top: .5em !important;
       text-decoration-color: -moz-use-text-color;
       text-decoration-line: none;
       text-decoration-style: solid;
       font-size:24px !important;
       white-space: initial !important;
    } " . PHP_EOL;
		}
		$sassFile = fopen( get_template_directory() . '/assets/css/partials/_colors.scss', 'w' );
		fwrite( $sassFile, $sass );
		fclose( $sassFile );
		//compile
		$wpscss_compiler = new Wp_Scss(
			get_template_directory() . '/assets/css/',
			get_template_directory() . '/', 'Leafo\ScssPhp\Formatter\Compact'
		);
		$wpscss_compiler->compile();
		//Deactivate Sass Plugin
		deactivate_plugins( $sassPlugin );
	}

}
add_action( 'acf/save_post', 'optionsPageSaved', 20 );
////////////////////////////////////////////////////////////////////
// /inc/shortcodes.php
////////////////////////////////////////////////////////////////////
add_shortcode( 'cblock', 'cblock_shortcode' );
function cblock_shortcode( $atts ) {
	extract( shortcode_atts( array(
		'id' => '0',
	), $atts, 'cblock' ) );
	global $post;
	$post = $id;
	setup_postdata( $post );
	ob_start();
	get_template_part( 'template-gcbs' );
	$output = ob_get_clean();
	wp_reset_postdata();

	return $output;
}
// YOUTUBE BUTTON
function ytbtn_shortcode( $atts, $content = null ) {
 extract( shortcode_atts( array(
	 'maxw' => '500'
 ), $atts, 'youtube' ) );
 $content = parse_str( parse_url( $content, PHP_URL_QUERY ), $ytID );
 return '<div class="youtube-wrapper" style="max-width:'.$maxw.'px;"><div class="youtube" data-embed="' . $ytID['v'] . '">
		 <div class="play-button"></div></div></div>';
}
add_shortcode( 'youtube', 'ytbtn_shortcode' );
add_shortcode( 'ctabtn', 'ctabtn_shortcode' );
function add_ctabtn() {
	if ( current_user_can( 'edit_posts' ) && current_user_can( 'edit_pages' ) ) {
		add_filter( 'mce_external_plugins', 'add_plugin' );
		add_filter( 'mce_buttons', 'register_button' );
	}
}
// CTA BUTTON
function ctabtn_shortcode( $atts, $content = null ) {
	extract( shortcode_atts( array(
		'to' => '#',
	), $atts, 'ctabtn' ) );
	return '<a class="btn" href=' . $to . '>' . $content . '</a>';
}
//Current year ShortCode
add_shortcode( 'currentyear', 'currentYear' );
function currentYear( $atts ) {
	$currentYear = date( 'Y' );
	return $currentYear;
}
add_action( 'init', 'add_ctabtn' );
function register_button( $buttons ) {
 array_push( $buttons, "YTButton" );
 array_push( $buttons, "CTAButton" );
 array_push( $buttons, "Cblock" );

 return $buttons;
}
function add_plugin( $plugin_array ) {
 $plugin_array['YTButton'] = get_bloginfo( 'template_url' ) . '/assets/js/tinymce/youtubebutton.js';
 $plugin_array['CTAButton'] = get_bloginfo( 'template_url' ) . '/assets/js/tinymce/ctabutton.js';
 $plugin_array['Cblock']    = get_bloginfo( 'template_url' ) . '/assets/js/tinymce/cblock.js';
 return $plugin_array;
}
////////////////////////////////////////////////////////////////////
// /inc/woocommerce.php
////////////////////////////////////////////////////////////////////
//WooCommerce Support!
add_action( 'woocommerce_before_main_content', 'my_theme_wrapper_start', 10 );
add_action( 'woocommerce_after_main_content', 'my_theme_wrapper_end', 10 );

function my_theme_wrapper_start() {
	echo '<section class="container">';
}
function my_theme_wrapper_end() {
	echo '</section>';
}
//WooCommerce Support
add_action( 'after_setup_theme', 'woocommerce_support' );
function woocommerce_support() {
	add_theme_support( 'woocommerce' );
}
////////////////////////////////////////////////////////////////////
// WPGoogle Maps Plugin 
// https://developers.google.com/maps/documentation/javascript/styling
////////////////////////////////////////////////////////////////////
table: wp_wpgmza
columns:
	id int(11) PRIMARY KEY AUTO_INCREMENT:
	map_id int(11):
	address varchar(700):
	description mediumtext:
	pic varchar(700):
	link varchar(700):
	icon varchar(700):
	lat varchar(700):
	lng varchar(700):
	anim varchar(3):
	title varchar(700):
	infoopen varchar(3):
	category varchar(500):
	approved tinyint(1):
	retina tinyint(1):
	type tinyint(1):
	did varchar(500):
	other_data longtext:
////////////////////////////////////////////////////////////////////
// https://wordpress.stackexchange.com/questions/116617/how-can-i-show-a-google-map-in-custom-post-type
////////////////////////////////////////////////////////////////////	
<?php 
    if(isset($prop_mapaddress)) {
        global $post;
        global $wpdb;

        $fromat_address = trim($prop_mapaddress);
        $fromat_address = str_replace(" ","+",$fromat_address);
        $address_obj = file_get_contents("http://maps.googleapis.com/maps/api/geocode/json?address=".$fromat_address."&sensor=false");
        $address_obj =json_decode($address_obj);
        $latitude = $address_obj->results[0]->geometry->location->lat;
        $longitude = $address_obj->results[0]->geometry->location->lng;            
    ?>       
        <script>        
            var geocoder;       
            var map;      
            var lat = "<?php echo $latitude ?>";       
            var lng = "<?php echo $longitude;  ?>";

            function initialize() {       
                geocoder = new google.maps.Geocoder();       
                var latlng = new google.maps.LatLng(lat, lng);       
                var mapOptions = {        
                    zoom: 15,        
                    center: latlng,        
                    mapTypeId: google.maps.MapTypeId.ROADMAP       
                }        
                map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);        
            } // map-convas would be id of div you want to show your map in  

            google.maps.event.addDomListener(window, 'load', initialize);       
        </script>      
        <?php        
    }
?>
////////////////////////////////////////////////////////////////////
// https://developers.google.com/maps/documentation/javascript/examples/geocoding-simple
////////////////////////////////////////////////////////////////////



////////////////////////////////////////////////////////////////////
// https://wordpress.stackexchange.com/questions/116617/how-can-i-show-a-google-map-in-custom-post-type
////////////////////////////////////////////////////////////////////	
/* pull data from custom post type */
$args = array (
  'post_type'              => array( 'card' ),
  'posts_per_page'         => '-1',
);

// The Query
$site_query = new WP_Query( $args );
$result = array();
// The Loop
if ( $site_query->have_posts() ) {

  while ( $site_query->have_posts() ) {
    $site_query->the_post();
    $sitename = get_post_meta( get_the_ID(), 'siteName', true );
    $addr1 = get_post_meta( get_the_ID(), 'addr1', true );
    $addr2 = get_post_meta( get_the_ID(), 'addr2', true );
    $op1 = get_post_meta( get_the_ID(), 'op1', true );
    $priceclass = get_post_meta( get_the_ID(), 'price_class', true );
    $longitude = get_post_meta( get_the_ID(), 'longitude', true );
    $latitude = get_post_meta( get_the_ID(), 'latitude', true );


     $result[] = array(
       'siteName' => $sitename,
       'addr1' => $addr1,
       'addr2' => $addr2,
       'op1' => $op1,
       'price_class' => $priceclass,
       'longitude' => $latitude,
       'latitude' => $latitude,
     );

  }
}

wp_reset_postdata();
/* store this in a JavaScript variable: */
var locations = <?php echo json_encode($result); ?>;	

////////////////////////////////////////////////////////////////////
// https://wordpress.stackexchange.com/questions/249505/get-all-meta-keys-assigned-to-a-post-type
////////////////////////////////////////////////////////////////////
$meta_fields = array();
$the_query = new WP_Query( 'post_type=posttype' );
if ( $the_query->have_posts() ) {
 while ( $the_query->have_posts() ) {
  $the_query->the_post();
  $meta_array = get_post_meta( get_the_ID() );
  foreach( $meta_array as $meta) {
   $meta_fields = $meta[];

  } 
 }
 wp_reset_postdata();
}	
/*adding post-meta 
add_post_meta($post_id, $meta_key, $meta_value, $unique);*/
add_post_meta( 68, '_color', 'red', true );

