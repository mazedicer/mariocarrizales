///////////////////////////////////////////////////////////
//Variables
///////////////////////////////////////////////////////////

    $black: #000;
	$default: $black !default;
	Variables use
	background: $black;
    
hyphens/underscores used interchangeably
$main_width = $main-width

///////////////////////////////////////////////////////////
//INTERPOLATION
///////////////////////////////////////////////////////////

#{$variable}

///////////////////////////////////////////////////////////
//PARENT REFERENCE
///////////////////////////////////////////////////////////

& = parent element e.g.
a{
    prop:val{
        &:hover{
            prop:val
        }
    }
}

///////////////////////////////////////////////////////////
//MIXIN
///////////////////////////////////////////////////////////

@mixin default-txt-clr( $tc: $black ){
		color: $tc;
	}

//MIXIN use 
@include default-txt-clr($black);

///////////////////////////////////////////////////////////
//NESTING
///////////////////////////////////////////////////////////

article p a {
	color: $blue;
	&:hover, &:focus {
		color: $duke-blue;
	}
	&:visited {
		color: $light-blue;
	}
}

.left-sidebar-links {
	a {
		color: $main-green;
		opacity: .7;
		&:hover {
			opacity: 1;
		}
	}
}

.left-sidebar-links {
	border-bottom: 1px solid $main-green;
	&:last-child {
		border: none;
	}
}

.elem {
	border: {
		top: 1px solid $blue;
		right: ...;
		bottom: ...;
		left: ...;
	}
}

///////////////////////////////////////////////////////////
//EXTEND
///////////////////////////////////////////////////////////

#riddle {
	padding: 20px;
}

$riddle-2 {
	@extend #riddle;
	margin: 10px;
}

%dotted {
	border: 1px dotted $black;
}

#riddle-2 {
	@extend %dotted;
}

///////////////////////////////////////////////////////////
//CONDITION
///////////////////////////////////////////////////////////

@if $riddle-color == blue {
	#riddle {
		background-color: $alice-blue;
	}
} @else {
	#riddle {
		background-color: $ash-gray;
	}
}

///////////////////////////////////////////////////////////
//LOOPS
///////////////////////////////////////////////////////////

$prct-yellow: 5%;

@for $i from 1 through 14 {
	#vert-nav ul li:nth-child( #{$i} ){
		background-color: mix( $yellow, $white, $prct-yellow )
	}
	$prct-yellow = $prct-yellow + 5%;
}

///////////////////////////////////////////////////////////
//IMPORTS
///////////////////////////////////////////////////////////

@import
    "file_name.scss"
    "file_name"
    "url"
    url(url_location)
    "file1", "file2", ...
    
///////////////////////////////////////////////////////////
//PARTIALS
///////////////////////////////////////////////////////////
/*file names that start with _ (underscore) are not compiled
and can be imported*/
_file.scss
//can be imported with
@import "file"

///////////////////////////////////////////////////////////
//FLAGS
///////////////////////////////////////////////////////////

!global
//makes the css available averywhere not just its scope

///////////////////////////////////////////////////////////
//LISTS / MAPS
///////////////////////////////////////////////////////////
$map:(key1:value,key2:value,key3:value,...)















